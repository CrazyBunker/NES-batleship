.segment "CODE"
; Обноввление статуса джойстиков
.proc update_keys
        ; Сохраняем предыдущие нажатые кнопки
        lda keys1_is_down
        sta keys1_prev
        lda keys2_is_down
        sta keys2_prev

        ; Инициируем опрос геймпадов записью 1 в нижний бит JOY_PAD1
        lda # $01               ; После записи в порт 1 состояния кнопок начинают в геймпадах
        sta JOY_PAD1            ; постоянно записываться в регистры-защёлки...
        sta keys2_is_down       ; Этот же единичный бит используем для остановки цикла ниже
        lsr a                   ; Обнуляем аккумулятор (тут быстрее всего сделать это сдвигом вправо)
        sta JOY_PAD1            ; Запись 0 в JOY_PAD1 фиксирует регистры-защёлки и их можно считывать
        
loop:   lda JOY_PAD1            ; Грузим очередную кнопку от первого контроллера
        and # %00000011         ; Нижний бит - стандартный контроллер, следующий - от порта расширения
        cmp # $01               ; Бит Carry установится в 1 только если в аккумуляторе не 0 (т.е. нажатие)
        rol keys1_is_down       ; Прокрутка keys1_pressed через Carry, если Ki - это i-ый бит, то:
                                ; NewCarry <- K7 <- K6 <- ... <- K1 <- K0 <- OldCarry
        lda JOY_PAD2            ; Делаем всё то же самое для второго геймпада...
        and # %00000011
        cmp # $01
        rol keys2_is_down       ; Однако на прокрутке keys2_pressed в восьмой раз в Carry выпадет
        bcc loop                ; единица которую мы положили в самом начале и цикл завершится.
        ; Далее обновляем keysX_was_pressed - логический AND нового состояния кнопок с NOT предыдущего,
        ; т.е. "то что было отжато ранее, но нажато сейчас".
        lda keys1_prev          ; берём предыдущее состояние,
        eor # $FF               ; инвертируем (через A XOR $FF),
        and keys1_is_down       ; накладываем по AND на новое состояние,
        sta keys1_was_pressed   ; и сохраняем в keys_was_pressed
        
        lda keys2_prev          ; и всё то же самое для второго геймпада...
        eor # $FF
        and keys2_is_down
        sta keys2_was_pressed
        rts                     ; возвращаемся из процедуры
.endproc